~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ STL Notes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


#include<array>         ---->  To include array....
Syntex :  array< datatype, size > variable;
          array< int, 5> a = {0,1,2,3,4};

---------------------------------------------------------------------------------------------------------------------------------------------------

#include<iterator>      ---->  For iterator

array<int,5> a = {0,1,3,4,5};
Syntex:
            array<int,5> :: iterator i = a.begin();
            auto i = a.begin();

In a = {0,1,3,4,5}  ---->  a.begin() = 0
                           a.end() = some garbage value..

print velue at address i via *i
increment i and j according to need

---------------------------------------------------------------------------------------------------------------------------------------------------

#include<algorithm>

1. reverse(a.begin(), a.end())                ------------>     reverse the array

2. sort(a.begin,a.end())                      ------------>     sort the array in ascending order

3. sort(a.begin,a.end(),greater<int>())       ------------>     sort the array in descending order

4. *lowerbound(a.begin(),a.end(),2)         ------> grater value from 2 ( can be 2 itself )

5. *upperbound(a.begin(),a.end(),2)         ------> strictly grater value from 2

---------------------------------------------------------------------------------------------------------------------------------------------------

#include<vector>

vector<int> v;           -->  Intialized vector with size 0
vector<int> v(n);        -->  Intialized vector with size 3
vector<int> v(n,3);      -->  Intialized vector with size 3 and value of all index with 3
vector<int> v = {0,1,2};  


vector<int> v ={0,1,2,4,5};

auto it = v.begin()+2;
v.erase(it);        ( ans : =  0,1,4,5      ==>  2 will be removed form the vecotr)

auto it = v. begin()+1;
v.erase(it,it+3)    ( ans : = 0,5     ==>  1,2,4 will be removed )


---------------------------------------------------------------------------------------------------------------------------------------------------

#include<queue>

queue<int> q;

q.push(2);    ---> push from the back
q.pop();      ---> pop from the front

1,2,3,4,5
q.front() = 1
q.back() = 5

---------------------------------------------------------------------------------------------------------------------------------------------------

#include<dequeue>     ( double ended queue )

dequeue<int> q;

q.push_front(), q.push_back() , q.pop_front() , q.pop_back()

1,2,4,5,6
q[4] = 6

--------------------------------------------------------------------------------------------------------------------------------------------------
 ****   Priority queue  ***

#include<queue>   

priority_queue<int> q;

q.push(3);        (push an elent in the priority queue )
q,top();        ( gratest element in the queue )
q.pop();         ( removes top element )

